 running on   54 total cores
 distrk:  each k-point on    9 cores,    6 groups
 distr:  one band on    3 cores,    3 groups
 using from now: INCAR     
 vasp.5.4.4.18Apr17-6-g9f103f2a35 (build Sep 01 2023 15:42:28) complex          
  
 POSCAR found type information on POSCAR  Ge
 POSCAR found :  1 types and       2 ions
 scaLAPACK will be used

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      For optimal performance we recommend to set                            |
|        NCORE= 4 - approx SQRT( number of cores)                             |
|      NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).     |
|      This setting can  greatly improve the performance of VASP for DFT.     |
|      The default,   NCORE=1            might be grossly inefficient         |
|      on modern multi-core architectures or massively parallel machines.     |
|      Do your own testing !!!!                                               |
|      Unfortunately you need to use the default for GW and RPA calculations. |
|      (for HF NCORE is supported but not extensively tested yet)             |
|                                                                             |
 ----------------------------------------------------------------------------- 


 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      You have enabled k-point parallelism (KPAR>1).                         |
|      This developmental code was originally  written by Paul Kent at ORNL,  |
|      and carefully double checked in Vienna.                                |
|      GW as well as linear response parallelism added by Martijn Marsman     |
|      and Georg Kresse.                                                      |
|      Carefully verify results versus KPAR=1.                                |
|      Report problems to Paul Kent and Vienna.                               |
|                                                                             |
 ----------------------------------------------------------------------------- 

 LDA part: xc-table for Pade appr. of Perdew

 ----------------------------------------------------------------------------- 
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|      Your generating k-point grid is not commensurate to the symmetry       |
|      of the lattice.  This can cause   slow convergence with respect        |
|      to k-points for HF type calculations                                   |
|      suggested SOLUTIONS:                                                   |
|       ) if not already the case, use automatic k-point generation           |
|       ) shift your grid to Gamma (G) (e.g. required for hex or fcc lattice) |
|                                                                             |
 ----------------------------------------------------------------------------- 

 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ...
 WAVECAR not read
 entering main loop
       N       E                     dE             d eps       ncg     rms          ort
DAV:   1     0.317807775295E+03    0.31781E+03   -0.11377E+04  6264   0.167E+03
DAV:   2     0.126847896328E+03   -0.19096E+03   -0.17385E+03  6264   0.342E+02
DAV:   3     0.736746156511E+02   -0.53173E+02   -0.51495E+02  6264   0.830E+01
DAV:   4     0.662196803844E+02   -0.74549E+01   -0.73586E+01  6264   0.345E+01
DAV:   5     0.654907909966E+02   -0.72889E+00   -0.72718E+00  6264   0.115E+01
 gam= 0.000 g(H,U,f)=  0.234E+00 0.317E+00 0.701E-04 ort(H,U,f) = 0.000E+00 0.000E+00 0.000E+00
SDA:   6    -0.103885441732E+02   -0.75879E+02   -0.22036E+00  6264   0.551E+00 0.000E+00
 gam= 0.382 g(H,U,f)=  0.364E-01 0.139E+00 0.170E-06 ort(H,U,f) = 0.478E-01 0.202E+00 0.201E-06
DMP:   7    -0.105481571450E+02   -0.15961E+00   -0.10829E+00  6264   0.175E+00 0.250E+00
 gam= 0.382 g(H,U,f)=  0.343E-01 0.459E-01 0.226E-11 ort(H,U,f) =-0.365E-02 0.118E+00 0.423E-11
DMP:   8    -0.106246536275E+02   -0.76496E-01   -0.49522E-01  6264   0.802E-01 0.114E+00
 gam= 0.382 g(H,U,f)=  0.889E-02 0.155E-01 0.880E-14 ort(H,U,f) = 0.500E-02 0.501E-01 0.240E-13
DMP:   9    -0.106602524271E+02   -0.35599E-01   -0.18150E-01  6264   0.243E-01 0.551E-01
 gam= 0.382 g(H,U,f)=  0.422E-02 0.528E-02 0.261E-15 ort(H,U,f) =-0.431E-02 0.191E-01 0.393E-15
DMP:  10    -0.106722426982E+02   -0.11990E-01   -0.60628E-02  6264   0.950E-02 0.148E-01
 gam= 0.382 g(H,U,f)=  0.182E-02 0.159E-02 0.430E-16 ort(H,U,f) = 0.660E-03 0.608E-02 0.148E-15
DMP:  11    -0.106766082445E+02   -0.43655E-02   -0.23932E-02  6264   0.341E-02 0.674E-02
 gam= 0.382 g(H,U,f)=  0.295E-03 0.611E-03 0.630E-23 ort(H,U,f) = 0.292E-03 0.169E-02 0.282E-22
DMP:  12    -0.106781978207E+02   -0.15896E-02   -0.66506E-03  6264   0.906E-03 0.198E-02
 gam= 0.382 g(H,U,f)=  0.248E-03 0.360E-03 0.105E-24 ort(H,U,f) =-0.235E-04 0.677E-03 0.440E-24
DMP:  13    -0.106786594938E+02   -0.46167E-03   -0.34280E-03  6264   0.607E-03 0.654E-03
 gam= 0.382 g(H,U,f)=  0.500E-04 0.196E-03 0.958E-25 ort(H,U,f) = 0.249E-04 0.420E-03 0.424E-24
DMP:  14    -0.106789180556E+02   -0.25856E-03   -0.16647E-03  6264   0.246E-03 0.445E-03
 gam= 0.382 g(H,U,f)=  0.386E-04 0.930E-04 0.241E-22 ort(H,U,f) =-0.274E-04 0.244E-03 0.111E-21
DMP:  15    -0.106790433213E+02   -0.12527E-03   -0.85688E-04  6264   0.132E-03 0.216E-03
 gam= 0.382 g(H,U,f)=  0.171E-04 0.435E-04 0.437E-21 ort(H,U,f) = 0.901E-05 0.127E-03 0.211E-20
DMP:  16    -0.106791127852E+02   -0.69464E-04   -0.45005E-04  6264   0.606E-04 0.136E-03
 final diagonalization
   1 F= -.10679113E+02 E0= -.10679113E+02  d E =-.298740E-19  mag=    -0.0000
